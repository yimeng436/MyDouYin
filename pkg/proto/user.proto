syntax = "proto3";

option go_package="../pb;pb";


message UserInfo{
  int64 id = 1; // 用户id​
  string name = 2; // 用户名称​
  int64 follow_count = 3; // 关注总数
  int64 follower_count = 4; // 粉丝总数​
  bool is_follow = 5; // true-已关注，false-未关注
  string avatar = 6; //头像地址
  string background_image = 7;//背景图片地址
  string signature = 8;//个性签名
  int64 total_favorited = 9;
  int64 favorite_count = 10;
}
message CheckPassWordRequest {
  string username = 1;
  string password = 2;
}
message CheckPassWordResponse {
  int64 user_id = 2;
  string  token = 3;
}

message RegisterRequest {
  string username = 1;
  string password = 2;
}

message RegisterResponse {
  int64 user_id = 1;
  string token = 2;
}
message GetUserInfoListRequest {
  repeated int64 id_list = 1;
}

message GetUserInfoListResponse {
  repeated UserInfo user_info_list = 1;
}

message GetUserInfoRequest{
  int64 id = 1;
}
message GetUserInfoResponse {
  UserInfo user_info = 1;
}
message GetUserInfoDictRequest{
  int64 user_id = 1;
}

message GetUserInfoDictResponse{
  map<int64,UserInfo>map = 1;
}

message TestRequest{

}
message TestResponse{

}

service UserService {
  rpc CheckPassword(CheckPassWordRequest) returns (CheckPassWordResponse);
  rpc Register(RegisterRequest) returns (RegisterResponse);
  rpc GetUserInfoList(GetUserInfoListRequest) returns (GetUserInfoListResponse); // 获取用户列表信息
  rpc GetUserInfo(GetUserInfoRequest) returns (GetUserInfoResponse); // 获取用户信息
  rpc GetUserInfoDict(GetUserInfoDictRequest) returns (GetUserInfoDictResponse); // 获取用户信息字典
  rpc TestConnect(TestRequest) returns (TestResponse);
}

